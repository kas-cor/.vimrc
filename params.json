{
  "name": ".vimrc",
  "tagline": "My dot file for VIM (Linux)",
  "body": "# .vimrc\r\nMy Vim for Linux\r\n\r\n## Installing\r\n\r\n```bash\r\ngit clone https://github.com/kas-cor/.vimrc.git ~/.vim\r\ncd ~/.vim\r\n./install.sh\r\n\r\nor\r\n\r\ngit clone https://github.com/kas-cor/.vimrc.git ~/.vim && cd ~/.vim && ./install.sh\r\n```\r\n\r\n## Requirements\r\n\r\nneocomplete requires Vim 7.3.885+ compiled with if_lua.\r\n\r\nUbuntu, install vim-nox\r\n```bash\r\napt-get install vim-nox -y\r\n```\r\n\r\n## Useing\r\n\r\nLeader key `,`\r\n\r\n### NeoComplete\r\n\r\n`Ctrl+k` - expand snippet\r\n\r\n`Tab` - Next step\r\n\r\n### NerdTree\r\n\r\n`,,` - open/close\r\n\r\n`Ctrl+\\` - path where open file\r\n\r\n### Multiple cursors\r\n\r\n`Ctrl+s` - add cursor in palace\r\n\r\n### CtrlP\r\n\r\n`Ctrl+f` or `,j` - open\r\n\r\n`Ctrl+b` - open buffers\r\n\r\n### Emmet\r\n\r\n`Ctrl+e` expand\r\n\r\n#### Commentary\r\n\r\n`gc` - Comment selection in visual mode\r\n\r\n`gcc` - Comment line in normal mode\r\n\r\n`gcap` - Comment paragraph in normal mode\r\n\r\n`:7,17Commentary` - Comment from 7 to 17 lines\r\n\r\n`:g/TODO/Commentary` - Comment lines with text \"TODO\"\r\n\r\n#### Easygrep\r\n\r\n`,vv` - Grep for the word under the cursor, match all occurences, like |gstar|\r\n\r\n`,vV` - Grep for the word under the cursor, match whole word, like |star|\r\n\r\n`,va` - Like vv, but add to existing list\r\n\r\n`,vA` - Like vV, but add to existing list\r\n\r\n`,vr` - Perform a global search search on the word under the cursor and prompt for a pattern with which to replace it.\r\n\r\n`,vo` - Select the files to search in and set grep options\r\n\r\n`,vy*` - Invoke any option from the options explorer, where * is the shortcut for that option.\r\ne.g. `,vyr` - toggles recursion\r\n\r\n`,vyb` - sets buffer grepping mode etc.\r\n\r\n### Misc\r\n\r\n`,m` - remove the Windows ^M - when the encodings gets messed up\r\n\r\n`,q` - quickly open a buffer for scribble\r\n\r\n`,x` - quickly open a markdown buffer for scribble\r\n\r\n`,pp` - toggle paste mode on and off\r\n\r\n`0` - Remap VIM 0 to first non-blank character\r\n\r\n`,f` - auto format all doc\r\n\r\n`,ba` - close all the buffers\r\n\r\n`,cd` - switch CWD to the directory of the open buffer\r\n\r\n`,<Enter>` - disable highlight\r\n\r\n`,e` - fast editing and reloading of vimrc configs\r\n\r\n`,w` - fast saving\r\n\r\n#### Find/Replace\r\n\r\n`;;` - replace word in cursor without confirm\r\n\r\n`;'` - replace word in cursor with confirm\r\n\r\n#### Spell checking\r\n\r\nPressing `,ss` will toggle and untoggle spell checking\r\n\r\nShortcuts using `<leader>`\r\n\r\n`,sn` - ]s\r\n\r\n`,sp` - [s\r\n\r\n`,sa` - zg\r\n\r\n`,s?` - z=\r\n\r\n#### Allow to copy/paste between VIM instances\r\n\r\n`,y` - copy the current visual selection to ~/.vbuf\r\n\r\n`,y` - copy the current line to the buffer file if no visual selection\r\n\r\n`,p` - paste the contents of the buffer file\r\n\r\n#### Copy/paste Ctrl+C/Ctrl+V\r\n\r\n`Ctrl+c` - copy\r\n\r\n`Ctrl+v` - paste\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}